spo2_icu = spo2[icu == 1]
icu = covid$icu
spo2_icu = spo2[icu == 1]
spo2_not_icu = spo2[icu == 0]
boxplot_w_points(spo2_icu, spo2_not_icu)
library(idar)
data(covid)
spo2 = covid$spo2
icu = covid$icu
spo2_icu = spo2[icu == 1]
spo2_not_icu = spo2[icu == 0]
boxplot_w_points(spo2_icu, spo2_not_icu)
?covid
spo2_not_icu = spo2[icu == 0]
boxplot_w_points(spo2_icu, spo2_not_icu, ylab = "Oxygen saturation (%)")
wilcox.test(spo2, mu = 95, alternative = "less")
wilcox.test(spo2, mu = 93, alternative = "less")
# ICU
wilcox.test(spo2_icu, mu = 92, alternative = "less")
# No ICU
wilcox.test(spo2_not_icu, mu = 92, alternative = "greater")
# This might not be a good idea...
t.test(spo2_icu, mu = 92, alternative = "less")
t.test(spo2_not_icu, mu = 92, alternative = "less")
t.test(spo2_not_icu, mu = 92, alternative = "greater")
# No ICU
wilcox.test(spo2_not_icu, mu = 92, alternative = "greater")
# Import data
library(idar)
data(diet)
head(diet)
# Import data
library(idar)
data(diet)
head(diet)
diet$weight.loss = diet$initial.weight - diet$final.weight
# Select diet
posw = diet$diet.type=="B"
# Variable of interest
dietB = diet$weight.loss[posw]
# Variable of interest
dietB = diet$weight.loss[posw]
boxplot(dietB, main = "Diet B", ylab = "Weight loss (kg)")
boxplot(dietB, main = "Diet B", xlab = "Weight loss (kg)", horizontal = TRUE)
abline(v = 0)
boxplot_w_points(dietB, main = "Diet B", horizontal = TRUE, xlab = "Weight loss (kg)")
abline(v = 0)
boxplot_w_points(dietB, main = "Diet B", horizontal = TRUE, xlab = "Weight loss (kg)", jitter_param = .25)
abline(v = 0)
boxplot(dietB, main = "Diet B", ylab = "Weight loss (kg)")
boxplot(dietB, main = "Diet B", xlab = "Weight loss (kg)", horizontal = TRUE)
abline(v = 0)
boxplot_w_points(dietB, main = "Diet B", horizontal = TRUE, xlab = "Weight loss (kg)", jitter_param = .25)
abline(v = 0)
t.test(dietB, alternative = "greater")
wilcox.test(dietB, alternative = "greater")
devtools::install_github("SMAC-group/idar")
hist_compare_to_normal(dietB)
devtools::install_github("SMAC-group/idar")
hist_compare_to_normal(dietB)
# Check empirical distribution
boxplot_w_points(spo2_icu, spo2_not_icu, ylab = "Oxygen saturation (%)")
# Import data
library(idar)
data(diet)
head(diet)
diet$weight.loss = diet$initial.weight - diet$final.weight
# Select diet
posw = diet$diet.type=="B"
# Variable of interest
dietB = diet$weight.loss[posw]
boxplot(dietB, main = "Diet B", ylab = "Weight loss (kg)")
boxplot(dietB, main = "Diet B", xlab = "Weight loss (kg)", horizontal = TRUE)
abline(v = 0)
boxplot_w_points(dietB, main = "Diet B", horizontal = TRUE, xlab = "Weight loss (kg)", jitter_param = .25)
abline(v = 0)
hist_compare_to_normal(dietB)
hist_compare_to_normal(dietB, delta = 0.1)
hist_compare_to_normal(dietB, delta = 0.5)
hist_compare_to_normal(dietB, delta = 0.1)
hist_compare_to_normal(dietB, delta = 0.15)
hist_compare_to_normal(dietB, delta = 0.2)
devtools::install_github("SMAC-group/idar")
library(idar)
hist_compare_to_normal(dietB)
# Import data
library(idar)
data(diet)
head(diet)
diet$weight.loss = diet$initial.weight - diet$final.weight
# Select diet
posw = diet$diet.type=="B"
# Variable of interest
dietB = diet$weight.loss[posw]
boxplot(dietB, main = "Diet B", ylab = "Weight loss (kg)")
boxplot(dietB, main = "Diet B", xlab = "Weight loss (kg)", horizontal = TRUE)
abline(v = 0)
boxplot_w_points(dietB, main = "Diet B", horizontal = TRUE, xlab = "Weight loss (kg)", jitter_param = .25)
abline(v = 0)
hist_compare_to_normal(dietB)
# Import data
library(idar)
data(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Select diet
posw = diet$diet.type=="A"
# Variable of interest
dietA = diet$weight.loss[posw]
# Boxplot
boxplot_w_points(dietA)
# Histogram
hist_compare_to_normal(dietA)
# Boxplot
boxplot_w_points(dietA)
library(idar)
data(codex)
boxplot_w_points(codex$lenght_hospital)
hist(codex$lenght_hospital)
hist_compare_to_normal(codex$lenght_hospital)
wilcox.test(codex$lenght_hospital, mu = 10, alternative = "greater")
library(idar)
data(codex)
boxplot_w_points(codex$lenght_hospital)
boxplot_w_points(codex$lenght_hospital, horizontal = T,
xlab = "Length of stay (day)")
hist_compare_to_normal(codex$lenght_hospital)
wilcox.test(codex$lenght_hospital, mu = 10, alternative = "greater")
wilcox.test(codex$lenght_hospital, mu = 0, alternative = "greater")
wilcox.test(codex$lenght_hospital)
wilcox.test(codex$lenght_hospital, mu = 10, alternative = "greater")
wilcox.test(codex$lenght_hospital, mu = 10, alternative = "less")
wilcox.test(codex$lenght_hospital, mu = 10)
library(idar)
data(covid)
# SpO2
spo2 = covid$spo2
# SpO2 (in ICU)
icu = covid$icu
spo2_icu = spo2[icu == 1]
# SpO2 (not in ICU)
spo2_not_icu = spo2[icu == 0]
# Check empirical distribution
boxplot_w_points(spo2_icu, spo2_not_icu, ylab = "Oxygen saturation (%)")
names(covid)
data(codex)
names(codex)
# Import data
library(idar)
data(diet)
head(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variables of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
# Boxplots
boxplot(idetA, dietB, ylab = "Weight loss (kg)")
# Import data
library(idar)
data(diet)
head(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variables of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
# Boxplots
boxplot(dietA, dietB, ylab = "Weight loss (kg)")
# Import data
library(idar)
data(diet)
head(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variables of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
# Boxplots
boxplot_w_points(dietA, dietB, ylab = "Weight loss (kg)")
# Import data
library(idar)
data(diet)
head(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variables of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
# Boxplots
boxplot_w_points(dietA, dietB, ylab = "Weight loss (kg)", horizontal = T)
# Boxplots
boxplot_w_points(dietA, dietB, xlab = "Weight loss (kg)", horizontal = T)
abline(v = 0)
# Import data
library(idar)
data(diet)
head(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variables of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
# Boxplots
boxplot_w_points(dietA, dietB, xlab = "Weight loss (kg)", horizontal = T)
abline(v = 0)
t.test(dietA, dietB, alternative = "two.sided")
wilcox.test(dietA, dietB, alternative = "two.sided")
# Import data
library(idar)
data(diet)
head(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variables of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
# Boxplots
boxplot_w_points(dietA, dietB, xlab = "Weight loss (kg)", horizontal = T)
abline(v = 0)
t.test(dietA, dietB, alternative = "two.sided")
#######
# Exercise:
# Import data
library(idar)
data(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variables of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
dietC = diet$weight.loss[diet$diet.type=="C"]
# Boxplots
boxplot_w_points(dietA, dietB, dietC, xlab = "Weight loss (kg)", horizontal = T)
abline(v = 0)
t.test(dietA, dietB, alternative = "two.sided")
t.test(dietA, dietC, alternative = "two.sided")
t.test(dietB, dietC, alternative = "two.sided")
# Import data
library(idar)
data(diet)
# Compute weight loss
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variables of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietC = diet$weight.loss[diet$diet.type=="C"]
# Boxplots
boxplot_w_points(dietA, dietC, xlab = "Weight loss (kg)", horizontal = T)
abline(v = 0)
wilcox.test(dietA, dietC, alternative = "greater")
wilcox.test(dietA, dietC, alternative = "less")
wilcox.test(dietA, dietC, alternative = "less", mu = 1)
wilcox.test(dietA, dietC, alternative = "less", mu = -1)
t.test(dietA, dietC, alternative = "less", mu = -1)
t.test(dietA, dietC, alternative = "less", mu = -0.5)
t.test(dietA, dietC, alternative = "less", mu = -0.75)
t.test(dietA, dietC, alternative = "less", mu = -0.8)
wilcox.test(dietA, dietC, alternative = "less", mu = -.950)
mean(dietC)
?diet
rm(list = ls())
library(idar)
data(diet)
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variable of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
dietC = diet$weight.loss[diet$diet.type=="C"]
# Create data frame
dat = data.frame(response = c(dietA, dietB, dietC),
groups = c(rep("A", length(dietA)),
rep("B", length(dietB)),
rep("C", length(dietC))))
dat
# Kruskal Wallis
kruskal.test(response ~ groups, data = dat)
# Wilcoxon tests
wilcox.test(dietA, dietB, alternative = "two.sided")
wilcox.test(dietA, dietC, alternative = "less")
wilcox.test(dietB, dietC, alternative = "less")
# Alpha Dunn-Sidak
1 - (1 - 0.05)^4
# Alpha Dunn-Sidak
1 - (1 - 0.05)^(1/4)
data(codex)
codex$age
hist(codex$age)
head(dat)
boxplot_w_points(dietA, dietB, dietC)
boxplot_w_points(dietA, dietB, dietC, horizontal = T)
abline(v = 0)
boxplot_w_points(dietA, dietB, dietC, xlab = "Weight loss (kg)",
horizontal = T)
kruskal.test(response ~ groups, data = dat)
1 - (1 - 0.05)^(1/3)
wilcox.test(dietA, dietB, alternative = "two.sided")
wilcox.test(dietA, dietC, alternative = "two.sided")
wilcox.test(dietB, dietC, alternative = "less")
1 - (1 - 0.05)^(1/3)
1 - (1 - 0.05)^(1/4)
?pharmacy
harmacy$weekda
pharmacy$weekday
# Construct attendance by day
attendance_monday = pharmacy$attendance[pharmacy$weekday = "Monday"]
table(pharmacy$weekday)
# Load data
library(idar)
data("pharmacy")
# Construct attendance by day
attendance_monday = pharmacy$attendance[pharmacy$weekday == "Monday"]
attendance_tuesday = pharmacy$attendance[pharmacy$weekday == "Tuesday"]
attendance_wednesday = pharmacy$attendance[pharmacy$weekday == "Wednesday"]
attendance_thursday = pharmacy$attendance[pharmacy$weekday == "Thursday"]
attendance_friday = pharmacy$attendance[pharmacy$weekday == "Friday"]
attendance_saturday = pharmacy$attendance[pharmacy$weekday == "Saturday"]
attendance_sunday = pharmacy$attendance[pharmacy$weekday == "Sunday"]
# Boxplot
boxplot_w_points(attendance_monday)
attendance_monday
# Load data
library(idar)
data("pharmacy")
# Construct attendance by day
attendance_monday = na.omit(pharmacy$attendance[pharmacy$weekday == "Monday"])
attendance_tuesday = na.omit(pharmacy$attendance[pharmacy$weekday == "Tuesday"])
attendance_wednesday = na.omit(pharmacy$attendance[pharmacy$weekday == "Wednesday"])
attendance_thursday = na.omit(pharmacy$attendance[pharmacy$weekday == "Thursday"])
attendance_friday = na.omit(pharmacy$attendance[pharmacy$weekday == "Friday"])
attendance_saturday = na.omit(pharmacy$attendance[pharmacy$weekday == "Saturday"])
attendance_sunday = na.omit(pharmacy$attendance[pharmacy$weekday == "Sunday"])
# Boxplot
boxplot_w_points(attendance_monday)
# Load data
library(idar)
data("pharmacy")
# Construct attendance by day
monday = na.omit(pharmacy$attendance[pharmacy$weekday == "Monday"])
tuesday = na.omit(pharmacy$attendance[pharmacy$weekday == "Tuesday"])
wednesday = na.omit(pharmacy$attendance[pharmacy$weekday == "Wednesday"])
thursday = na.omit(pharmacy$attendance[pharmacy$weekday == "Thursday"])
friday = na.omit(pharmacy$attendance[pharmacy$weekday == "Friday"])
saturday = na.omit(pharmacy$attendance[pharmacy$weekday == "Saturday"])
sunday = na.omit(pharmacy$attendance[pharmacy$weekday == "Sunday"])
# Boxplot
boxplot_w_points(monday, tuesday, wednesday, thursday,
friday, saturday, sunday,
xlab = "Number of customer per hour",
horizontal = TRUE)
# Boxplot
boxplot_w_points(monday, tuesday, wednesday, thursday,
friday, saturday, sunday,
names = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
xlab = "Number of customer per hour",
horizontal = TRUE)
boxplot_w_points(monday, tuesday, wednesday, thursday,
friday, saturday, sunday,
names = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
xlab = "Number of customer per hour",
horizontal = TRUE)
# Boxplot
boxplot_w_points(monday, tuesday, wednesday, thursday,
friday, saturday, sunday,
names = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"),
xlab = "Number of customer per hour",
horizontal = TRUE)
# Boxplot
boxplot_w_points(monday, tuesday, wednesday, thursday,
friday, saturday, sunday,
names = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"),
xlab = "Number of customer per hour",
horizontal = TRUE)
?boxplot_w_points
boxplot(monday, tuesday, wednesday, thursday,
friday, saturday, sunday,
names = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"),
xlab = "Number of customers per hour",
horizontal = TRUE)
t.test(tuesday, monday, alternative = "greater")
t.test(tuesday, wednesday, alternative = "greater")
t.test(tuesday, thursday, alternative = "greater")
t.test(tuesday, friday, alternative = "greater")
t.test(tuesday, saturday, alternative = "greater")
t.test(tuesday, sunday, alternative = "greater")
t.test(tuesday, sunday, alternative = "two.sided")
t.test(tuesday, sunday, alternative = "less")
t.test(sunday, monday, alternative = "greater")
t.test(sunday, wednesday, alternative = "greater")
t.test(sunday, thursday, alternative = "greater")
t.test(sunday, friday, alternative = "greater")
t.test(sunday, saturday, alternative = "greater")
t.test(sunday, tuesday, alternative = "greater")
library(idar)
data(covid)
# SpO2
spo2 = covid$spo2
# SpO2 (in ICU)
icu = covid$icu
spo2_icu = spo2[icu == 1]
# SpO2 (not in ICU)
spo2_not_icu = spo2[icu == 0]
boxplot_w_points(spo2_icu, spo2_not_icu)
wilcox.test(spo2_icu, spo2_not_icu, alternative = "less")
library(codex)
data("codex")
boxplot(codex$cmax ~ codex$gender)
boxplot(codex$cmax ~ codex$obese)
?codex
# Import data
library(idar)
data(codex)
# Cmax by group
Cmax_men = codex$cmax[codex$gender == 1]
Cmax_women = codex$cmax[codex$gender == 0]
Cmax_obese = codex$cmax[codex$obese == 1]
Cmax_non_obese = codex$cmax[codex$obese == 1]
# Import data
library(idar)
data(codex)
# Cmax by group
Cmax_men = codex$cmax[codex$gender == 1]
Cmax_women = codex$cmax[codex$gender == 0]
Cmax_obese = codex$cmax[codex$obese == 1]
Cmax_non_obese = codex$cmax[codex$obese == 1]
# Boxplot
boxplot_w_points(Cmax_women, Cmax_men)
boxplot_w_points(Cmax_women, Cmax_men, names = c("Women", "Men"),
ylab = "Cmax (ng.h/ml)")
Cmax_obese = codex$cmax[codex$obese == 1]
# Cmax by group
Cmax_men = codex$cmax[codex$gender == 0]
Cmax_women = codex$cmax[codex$gender == 1]
Cmax_non_obese = codex$cmax[codex$obese == 0]
Cmax_obese = codex$cmax[codex$obese == 1]
# Boxplot
boxplot_w_points(Cmax_women, Cmax_men, names = c("Women", "Men"),
ylab = "Cmax (ng.h/ml)")
# Cmax by group
Tmax_men = codex$tmax[codex$gender == 1]
Tmax_women = codex$tmax[codex$gender == 0]
Tmax_obese = codex$tmax[codex$obese == 1]
Tmax_non_obese = codex$tmax[codex$obese == 1]
# Import data
library(idar)
data(codex)
# Cmax by group
Cmax_men = codex$cmax[codex$gender == 0]
Cmax_women = codex$cmax[codex$gender == 1]
Cmax_non_obese = codex$cmax[codex$obese == 0]
Cmax_obese = codex$cmax[codex$obese == 1]
# Boxplot
boxplot_w_points(Cmax_women, Cmax_men, names = c("Women", "Men"),
ylab = "Cmax (ng/ml)")
?codex
codex$id
codex$number_doses
boxplot_w_points(Cmax_obese, Cmax_non_obese, names = c("Obese", "Non-obese"), ylab = "Cmax (ng/ml)")
boxplot_w_points(spo2, ylab = "Oxygen saturation (%)")
library(idar)
data(covid)
# Extract the variable SpO2
spo2 = covid$spo2
# Extract the variable ICU
icu = covid$icu
# Select SpO2 of ICU patients
spo2_icu = spo2[icu == 1]
# Select SpO2 of non-ICU patients
spo2_not_icu = spo2[icu == 0]
# Boxplot
boxplot_w_points(spo2_not_icu, spo2_icu, names = c("No ICU", "ICU"))
library(idar)
data(covid)
# Extract the variable SpO2
spo2 = covid$spo2
# Extract the variable ICU
icu = covid$icu
# Select SpO2 of ICU patients
spo2_icu = spo2[icu == 1]
# Select SpO2 of non-ICU patients
spo2_not_icu = spo2[icu == 0]
# Perform test
wilcox.test(spo2_icu, spo2_not_icu, alternative = "less")
# Import data and compute weight loss
library(idar)
data(diet)
diet$weight.loss = diet$initial.weight - diet$final.weight
# Variable of interest
dietA = diet$weight.loss[diet$diet.type=="A"]
dietB = diet$weight.loss[diet$diet.type=="B"]
dietC = diet$weight.loss[diet$diet.type=="C"]
# Create data frame
dat = data.frame(response = c(dietA, dietB, dietC),
groups = c(rep("A", length(dietA)),
rep("B", length(dietB)),
rep("C", length(dietC))))
wilcox.test(dietA, dietC, alternative = "less")
prop.test(13, 250, p = 0.05)
dbinom(13, 250, p = 0.05)
dbinom(0:12, 250, p = 0.05)
sum(dbinom(0:12, 250, p = 0.05))
Cmax_men = codex$cmax[codex$gender == 1]
Cmax_women = codex$cmax[codex$gender == 0]
boxplot(Cmax_men, Cmax_women)
devtools::install_github("https://github.com/SMAC-Group/idar")
?codex
library(idar)
?codex
```{out}
1        2        3        4        5        6        7
38.38719 45.03286 51.67852 58.32419 64.96985 71.61552 78.26118
```
---
