ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0),
axis.title.x = element_text(margin = margin(t = 30, r = 0, b = 0, l = 0))
) )
library(ggplot2)
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0),
axis.title.x = element_text(margin = margin(t = 30, r = 0, b = 0, l = 0))
) )
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0),
) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0),
) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0),
) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))
ggplot(df_sub) +
library(ggplot2)
ggplot(df_sub) +
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0),
) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))
library(poliscidata)
df_sub = world %>%
filter(regionun %in% c("Africa", "USA/Canada")) %>%
select(country, debt) %>%
na.omit()
library(poliscidata)
df_sub = world %>%
filter(regionun %in% c("Africa", "USA/Canada")) %>%
select(country, debt) %>%
na.omit()
ggplot(df_sub) +
aes(x = country, weight = debt) +
geom_bar() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10))
ggplot(df_sub) +
aes(x = reorder(country, debt), weight = debt) +
geom_bar() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP")
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 30, r = 0, b = 0, l = 0)))
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 20),
axis.title.x = element_text(margin = margin(t = 30, r = 0, b = 0, l = 0))
)
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 30, r = 0, b = 0, l = 0), size = 15)
)
ggplot(df_sub) +
aes(x = reorder(country, debt), y = debt) +
geom_segment( aes(x=reorder(country, debt), xend=country, y=0, yend=debt)) +
geom_point( color="black", size=3) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10)) +
xlab("Country") +
ylab("Public debt as a percentage of GDP") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
df_murders = murders %>%
group_by(region) %>%
summarise(total_pop = sum(population),
total_murders = sum(total)
) %>%
mutate(
murder_rate = total_murders/total_pop
)
df_murders$region = recode(df_murders$region, "North Central" = "Midwest")
head(df_murders)
ggplot(df_murders) +
aes(region, total_murders) +
geom_bar(stat="identity") +
theme_minimal()
ggplot(df_murders) +
aes(reorder(region, total_murders), total_murders) +
geom_bar(stat="identity") +
theme_minimal()
ggplot(df_murders) +
aes(reorder(region, -total_murders), total_murders) +
geom_bar(stat="identity") +
theme_minimal()
ggplot(df_murders) +
aes(x = reorder(region, total_murders), y= total_murders) +
geom_bar(stat = "identity", width = .7, fill = "grey34") +
coord_flip()+
theme_minimal() +
xlab("") +
ylab("")+
geom_text(stat='identity', aes(label=total_murders), hjust=1.4, col ="white", size = 5)+
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text = element_text(size = 13),
axis.text.y = element_text( color="black",
size=14)
) + ggtitle("Total murders per US region")
mygraph = ggplot(df_murders) +
aes(x = reorder(region, total_murders), y = total_murders, fill = region) +
geom_bar(stat = "identity", width = .7) +
coord_flip()+
theme_minimal() +
xlab("") +
ylab("")+
geom_text(stat='identity', aes(label=total_murders), hjust=1.4, col ="white", size = 5)+
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text = element_text(size = 13),
axis.text.y = element_text( color="black",
size=14)
) + ggtitle("Total murders per US region")
mygraph
library(magick)
library(grid)
png = image_read("https://www.vividmaps.com/wp-content/uploads/2018/10/US-regions.jpg")
img = rasterGrob(png, interpolate = TRUE)
mygraph = mygraph + annotation_custom(img, ymin = 2000, ymax = 4500, xmin = 0.5, xmax = 2.5)
mygraph = mygraph + scale_fill_manual(values = c("South" = "#d4a770",
"West" = "#e8cb5b",
"Midwest" = "#aebc5b",
"Northeast" = "#b49ebd"))
mygraph
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Count") +
geom_histogram() +
theme_minimal() +
ggtitle("Histogram of price")
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Count") +
geom_histogram(bins = 200) +
theme_minimal() +
ggtitle("Histogram of price")
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Count") +
geom_histogram() +
theme_minimal() +
ggtitle("Histogram of price") +
+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Count") +
geom_histogram() +
theme_minimal() +
ggtitle("Histogram of price") +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Count") +
geom_histogram(bins = 200) +
theme_minimal() +
ggtitle("Histogram of price") +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Count") +
geom_histogram(bins = 5) +
theme_minimal() +
ggtitle("Histogram of price") +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
ggplot(data=diamonds, aes(x=price)) +
geom_density()
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Density") +
geom_density(adjust=1.5, alpha=.4, fill = "darkgrey") +
theme_minimal() +
ggtitle("Estimated density of price")  +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Density") +
geom_density(adjust=30, alpha=.4, fill = "darkgrey") +
theme_minimal() +
ggtitle("Estimated density of price")  +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Density") +
geom_density(adjust=.1, alpha=.4, fill = "darkgrey") +
theme_minimal() +
ggtitle("Estimated density of price")  +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Density") +
geom_density(adjust=.1, alpha=.4, fill = "darkgrey") +
theme_minimal() +
ggtitle("Estimated density of price")  +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
ggplot(data=diamonds, aes(x=price)) +
xlab("Price")+
ylab("Density") +
geom_density(adjust=20, alpha=.4, fill = "darkgrey") +
theme_minimal() +
ggtitle("Estimated density of price")  +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 30, b = 0, l = 0), size = 15),
axis.title.x = element_text(margin = margin(t = 40, r = 0, b = 0, l = 0), size = 15)
)
library(ggplot2)
library(palmerpenguins)
library(tidyverse)
data("penguins")
head(penguins)
head(df_peng_stats)
df_peng_stats <-
penguins %>%
mutate(bill_ratio = bill_length_mm / bill_depth_mm) %>%
filter(!is.na(bill_ratio)) %>%
group_by(species) %>%
mutate(
n = n(),
median = median(bill_ratio),
max = max(bill_ratio)
) %>%
ungroup() %>%
mutate(species_num = as.numeric(fct_rev(species)))  %>%
select(species, bill_length_mm, bill_depth_mm, bill_ratio, n, median, max, species_num)
ggplot(data=df_peng_stats, aes(x=bill_ratio, group=species, fill=species)) +
geom_density(alpha=0.6) +
scale_fill_manual(values = c("#3d6721", "#a86826", "#006c89"))  +
xlab("Bill ratio") + ylab("Density")
library(ggridges)
ggplot(df_peng_stats, aes(x = bill_ratio, y = species, fill = species)) +
geom_density_ridges(scale = .9, alpha=.8) +
theme_ridges() +
theme_minimal() +
scale_fill_manual(values = c("#3d6721", "#a86826", "#006c89")) +
scale_color_manual(values = c("#3d6721", "#a86826", "#006c89")) +
xlab("Bill ratio") +
ylab("Species")
g1 = ggplot(df_peng_stats, aes(bill_ratio, species_num, color = species)) +
geom_point(
aes(y = species_num - .15),
shape = "|",
size = 5,
alpha = .33
) +
ggdist::stat_halfeye(
aes(
y = species_num,
color = species,
fill = after_scale(colorspace::lighten(color, .5))
),
shape = 18, point_size = 3, interval_size = 1.8, adjust = .5,
.width = c(0, 1)
) +
theme_minimal() +
scale_color_manual(values = c("#3d6721", "#a86826", "#006c89"), guide = "none")
g1
g2 = g1 +
geom_text(
aes(x = median, label = format(round(median, 2), nsmall = 2)),
stat = "unique",
color = "white",
family = "Open Sans",
fontface = "bold",
size = 3.4,
nudge_y = .15
) +
geom_text(
aes(x = max, label = glue::glue("n = {n}")),
stat = "unique",
family = "Open Sans",
fontface = "bold",
size = 3.5,
hjust = 0,
nudge_x = .01,
nudge_y = .02
)
g2
g3 = g2 +
coord_cartesian(clip = "off", expand = FALSE) +
scale_x_continuous(
limits = c(1.6, 3.8),
breaks = seq(1.6, 3.8, by = .2)
)+
scale_y_continuous(
limits = c(.55, NA),
breaks = 1:3,
labels = c("Gentoo", "Chinstrap", "Adélie")
)
g3
g4 =  g3 +  labs(
x = "Bill ratio",
y = NULL,
subtitle = "B. Raincloud plot showing the distribution of bill ratios, estimated as bill length divided by bill depth.",
caption = "Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst"
) +
theme(
panel.grid.major.x = element_line(size = .35),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(size = 13),
axis.ticks.length = unit(0, "lines"),
plot.title.position = 'plot',
plot.subtitle = element_text(margin = margin(t = 5, b = 10)),
plot.margin = margin(10, 25, 10, 25),
axis.ticks = element_line(color = "grey92"),
panel.grid.minor = element_blank(),
legend.title = element_text(size = 12),
legend.text = element_text(color = "grey30"),
plot.title = element_text(size = 18, face = "bold"),
plot.caption = element_text(size = 9, margin = margin(t = 15))
)
g4
adelie = image_read("https://raw.githack.com/SMAC-Group/course_intro_ds/master/img/adelie.png")
img_adelie = grid::rasterGrob(adelie, interpolate = TRUE)
chinestrap = image_read("https://raw.githack.com/SMAC-Group/course_intro_ds/master/img/chinestrap.png")
img_chinestrap = grid::rasterGrob(chinestrap, interpolate = TRUE)
gentoo = image_read("https://raw.githack.com/SMAC-Group/course_intro_ds/master/img/gentoo.png")
img_gentoo = grid::rasterGrob(gentoo, interpolate = TRUE)
g5 = g4 + annotation_custom(img_adelie, ymin = 3.1, ymax = 3.7, xmin = 1.05, xmax = 2) +
annotation_custom(img_chinestrap, ymin = 2.1, ymax = 2.7, xmin = 1.05, xmax = 2) +
annotation_custom(img_gentoo, ymin = 1.1, ymax = 1.7, xmin = 1.0, xmax = 2)
g5
adelie = image_read("https://raw.githack.com/SMAC-Group/course_intro_ds/master/img/adelie.png")
img_adelie = grid::rasterGrob(adelie, interpolate = TRUE)
chinestrap = image_read("https://raw.githack.com/SMAC-Group/course_intro_ds/master/img/chinestrap.png")
img_chinestrap = grid::rasterGrob(chinestrap, interpolate = TRUE)
gentoo = image_read("https://raw.githack.com/SMAC-Group/course_intro_ds/master/img/gentoo.png")
img_gentoo = grid::rasterGrob(gentoo, interpolate = TRUE)
g5 = g4 + annotation_custom(img_adelie, ymin = 3.1, ymax = 3.7, xmin = 1.05, xmax = 2) +
annotation_custom(img_chinestrap, ymin = 2.1, ymax = 2.7, xmin = 1.05, xmax = 2) +
annotation_custom(img_gentoo, ymin = 1.1, ymax = 1.7, xmin = 1.0, xmax = 2)
g5
library(gapminder)
gapminder
data("gapminder")
head(gapminder)
df_ch = gapminder %>% filter(country == "Switzerland")
rm(list=ls())
rm(list=ls())
library(gapminder)
data("gapminder")
head(gapminder)
df_ch = gapminder %>% filter(country == "Switzerland")
library(dslabs)
rm(list=ls())
library(gapminder)
data("gapminder")
head(gapminder)
df_ch = gapminder %>% filter(country == "Switzerland")
