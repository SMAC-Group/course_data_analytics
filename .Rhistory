iris_plot
# fit model bronchitis
library(idar)
data("bronchitis")
mod2 = glm(bron ~ cigs + poll, data = bronchitis, family = binomial())
summary(mod2)
# do matrix of prediction
m = 40
cigs_to_predict = seq(from = min(bronchitis$cigs), to = max(bronchitis$cigs),
length.out = m)
poll_to_predict = seq(from = min(bronchitis$poll), to = max(bronchitis$poll),
length.out = m)
predicted_prob = matrix(NA, m, m)
for (i in 1:m){
for (j in 1:m){
predicted_prob[i,j] = predict(mod2, data.frame(cigs = cigs_to_predict[i],
poll = poll_to_predict[j]), type = "response")
}
}
fig = plot_ly(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
fig = fig %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
fig = fig %>% colorbar(title = "Estimated \n probability")
fig
summarise(bronchitis$cigs)
summary(bronchitis$cigs)
bronchitis
plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
mycol = RColorBrewer::brewer.pal(n = 2, name = "Dark2")
hcolors=c(mycol)[bronchitis$bron]
mycol = RColorBrewer::brewer.pal(n = 2, name = "Dark2")
hcolors=c(mycol)[bronchitis$bron]
plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
mycol = c("#1a31ff", "#ff3422")
hcolors=c(mycol)[bronchitis$bron]
plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
mycol = c("#1a31ff", "#ff3c1a")
hcolors=c(mycol)[bronchitis$bron]
plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
hcolors
bronchitis$bron
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1 = plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1 %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
lot_ly(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
plot_ly(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
poll_to_predict
fig_1 %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
poll_to_predict,
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
predicted_prob
fig_1 %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
poll_to_predict,
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(predicted_prob,
highlight = FALSE)))
fig_1 %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
poll_to_predict,
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = predicted_prob))
# fit model bronchitis
library(idar)
data("bronchitis")
mod2 = glm(bron ~ cigs + poll, data = bronchitis, family = binomial())
summary(mod2)
summary(bronchitis$cigs)
# do matrix of prediction
m = 40
cigs_to_predict = seq(from = min(bronchitis$cigs), to = max(bronchitis$cigs),
length.out = m)
poll_to_predict = seq(from = min(bronchitis$poll), to = max(bronchitis$poll),
length.out = m)
predicted_prob = matrix(NA, m, m)
for (i in 1:m){
for (j in 1:m){
predicted_prob[i,j] = predict(mod2, data.frame(cigs = cigs_to_predict[i],
poll = poll_to_predict[j]), type = "response")
}
}
fig = plot_ly(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
fig
fig = fig %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
fig = fig %>% colorbar(title = "Estimated \n probability")
mycol = c("#1a31ff", "#ff3c1a")
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
fig_1 = plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1
fig_1 %>% add_trace(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob)
poll_to_predict
cigs_to_predict
predicted_prob
fig_1 %>% add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob)
mycol = c("#1a31ff", "#e7e82b")
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
fig_1 = plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1
fig_1 %>% add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob)
mycol = c("#44234c", "#e7e82b")
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
fig_1 = plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1
fig_1 %>% add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob)
fig_2 = fig_1 %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
fig_2 = fig_2 %>% colorbar(title = "Estimated \n probability")
fig_2
fig_1
fig_1 %>% add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob)
fig_1
fig_2 = fig_1 %>%
add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
mycol = c("#44234c", "#e7e82b")
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
fig_1 = plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron, # EDIT: ~ added
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1
fig_2 = fig_1 %>%
add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
fig_2 = fig_2 %>% colorbar(title = "Estimated \n probability")
fig_2
# clean ws
rm(list=ls())
# load libraries
library(plotly)
library(reshape2)
# fit model bronchitis
library(idar)
data("bronchitis")
mod2 = glm(bron ~ cigs + poll, data = bronchitis, family = binomial())
summary(mod2)
summary(bronchitis$cigs)
# do matrix of prediction
m = 40
cigs_to_predict = seq(from = min(bronchitis$cigs), to = max(bronchitis$cigs),
length.out = m)
poll_to_predict = seq(from = min(bronchitis$poll), to = max(bronchitis$poll),
length.out = m)
predicted_prob = matrix(NA, m, m)
for (i in 1:m){
for (j in 1:m){
predicted_prob[i,j] = predict(mod2, data.frame(cigs = cigs_to_predict[i],
poll = poll_to_predict[j]), type = "response")
}
}
fig = plot_ly(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
fig
fig = fig %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
fig = fig %>% colorbar(title = "Estimated \n probability")
# define colors
mycol = c("#44234c", "#e7e82b")
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
# clean ws
rm(list=ls())
# load libraries
library(plotly)
library(reshape2)
# fit model bronchitis
library(idar)
data("bronchitis")
mod2 = glm(bron ~ cigs + poll, data = bronchitis, family = binomial())
summary(mod2)
summary(bronchitis$cigs)
# do matrix of prediction
m = 40
cigs_to_predict = seq(from = min(bronchitis$cigs), to = max(bronchitis$cigs),
length.out = m)
poll_to_predict = seq(from = min(bronchitis$poll), to = max(bronchitis$poll),
length.out = m)
predicted_prob = matrix(NA, m, m)
for (i in 1:m){
for (j in 1:m){
predicted_prob[i,j] = predict(mod2, data.frame(cigs = cigs_to_predict[i],
poll = poll_to_predict[j]), type = "response")
}
}
fig = plot_ly(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
# define colors
mycol = c("#44234c", "#e7e82b")
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
fig_1 = plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron,
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1
fig_2 = fig_1 %>%
add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
fig_2 = fig_2 %>% colorbar(title = "Estimated \n probability")
fig_2
fig_2
# clean ws
rm(list=ls())
# load libraries
library(plotly)
library(reshape2)
# fit model bronchitis
library(idar)
data("bronchitis")
mod2 = glm(bron ~ cigs + poll, data = bronchitis, family = binomial())
summary(mod2)
summary(bronchitis$cigs)
# do matrix of prediction
m = 40
cigs_to_predict = seq(from = min(bronchitis$cigs), to = max(bronchitis$cigs),
length.out = m)
poll_to_predict = seq(from = min(bronchitis$poll), to = max(bronchitis$poll),
length.out = m)
predicted_prob = matrix(NA, m, m)
for (i in 1:m){
for (j in 1:m){
predicted_prob[i,j] = predict(mod2, data.frame(cigs = cigs_to_predict[i],
poll = poll_to_predict[j]), type = "response")
}
}
fig = plot_ly(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
# define colors
mycol = c("#44234c", "#e7e82b")
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
fig_1 = plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron,
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1
fig_2 = fig_1 %>%
add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
fig_2 = fig_2 %>% colorbar(title = "Estimated \n probability")
fig_2
saveWidget(fig_2, "static/fig_surface_points_logistic.html", selfcontained = T, libdir = "lib")
# clean ws
rm(list=ls())
# load libraries
library(plotly)
library(reshape2)
library(htmlwidgets)
# fit model bronchitis
library(idar)
data("bronchitis")
mod2 = glm(bron ~ cigs + poll, data = bronchitis, family = binomial())
summary(mod2)
summary(bronchitis$cigs)
# do matrix of prediction
m = 40
cigs_to_predict = seq(from = min(bronchitis$cigs), to = max(bronchitis$cigs),
length.out = m)
poll_to_predict = seq(from = min(bronchitis$poll), to = max(bronchitis$poll),
length.out = m)
predicted_prob = matrix(NA, m, m)
for (i in 1:m){
for (j in 1:m){
predicted_prob[i,j] = predict(mod2, data.frame(cigs = cigs_to_predict[i],
poll = poll_to_predict[j]), type = "response")
}
}
fig = plot_ly(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
add_surface(
contours = list(
y = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
x = list(
highlight = TRUE,
highlightcolor = "#41a7b3"
),
z = list(highlight = FALSE)))
# define colors
mycol = c("#44234c", "#e7e82b")
hcolors=c(mycol)[(bronchitis$bron+1)]
hcolors
fig_1 = plot_ly(bronchitis,
x = ~poll,
y = ~cigs,
z = ~bron,
text = ~bron,
type = "scatter3d",
mode = "markers",
marker = list(color = hcolors))
fig_1
fig_2 = fig_1 %>%
add_surface(x = poll_to_predict, y = cigs_to_predict, z = predicted_prob) %>%
layout(scene = list(xaxis = list(title = "Pollution index"),
yaxis = list(title = "Daily number of cigarettes"),
zaxis = list(title = "Predicted probability of Bronchitis")))
fig_2 = fig_2 %>% colorbar(title = "Estimated \n probability")
fig_2
saveWidget(fig_2, "static/fig_surface_points_logistic.html", selfcontained = T, libdir = "lib")
fig_2
saveWidget(fig_2, "static/fig_surface_points_logistic.html", selfcontained = T, libdir = "lib")
styler:::style_selection()
